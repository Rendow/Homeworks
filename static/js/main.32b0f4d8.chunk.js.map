{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","classes","wrapper","allContent","avatar","src","alt","content","name","message","time","messageData","messageNew","HW1","Affair","color","affair","priority","task","deleteButton","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","affairs","selectButtons","button","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","aff","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressAndTask","inputClass","s","input","greeting","value","onChange","onKeyPress","errorMessage","buttonContainer","addButton","count","GreetingContainer","users","addUserCallback","setName","setError","trimmedTitle","trim","alert","length","event","currentTarget","e","key","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.32b0f4d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"allContent\":\"Affairs_allContent__pMohs\",\"affairs\":\"Affairs_affairs__3amS3\",\"selectButtons\":\"Affairs_selectButtons__9bS1t\",\"buttonConteiner\":\"Affairs_buttonConteiner__3Yb03\",\"deleteButton\":\"Affairs_deleteButton__3_l67\",\"name\":\"Affairs_name__30WOy\",\"task\":\"Affairs_task__2TV5W\",\"low\":\"Affairs_low__8UUN6\",\"middle\":\"Affairs_middle__1hg6k\",\"high\":\"Affairs_high__lxECa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__3SCw1\",\"error\":\"Greeting_error__2LKAw\",\"errorMessage\":\"Greeting_errorMessage__3su8t\",\"buttonContainer\":\"Greeting_buttonContainer__Jr6GF\",\"addButton\":\"Greeting_addButton__3ZrTH\",\"count\":\"Greeting_count__11JC7\",\"input\":\"Greeting_input__1-HRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__eTibW\",\"allContent\":\"Message_allContent__x05pr\",\"avatar\":\"Message_avatar__3uVWe\",\"content\":\"Message_content__1hVqg\",\"name\":\"Message_name__2WUDT\",\"message\":\"Message_message__3ajkV\",\"time\":\"Message_time__1dUPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2sa9v\",\"errorInput\":\"SuperInputText_errorInput__2J-xS\",\"error\":\"SuperInputText_error__3u8ko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__12mma\",\"red\":\"SuperButton_red__285lS\",\"button\":\"SuperButton_button__Ck_bP\",\"blink\":\"SuperButton_blink__1J6RW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__A3d2F\",\"column\":\"HW4_column__386_H\",\"testSpanError\":\"HW4_testSpanError__1jpwO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2OvgH\",\"checkbox\":\"SuperCheckbox_checkbox__aYjCK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__-jyXi\"};","import React from 'react'\r\nimport classes from './Message.module.css'\r\n\r\ntype messageDataType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: messageDataType) {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.allContent}>\r\n\r\n                    <div><img className={classes.avatar} src={props.avatar} alt=\"\"/></div>\r\n\r\n                <div className={classes.content}>\r\n                    <div className={classes.name}>{props.name}</div>\r\n                    <div className={classes.message}>{props.message}</div>\r\n                    <div className={classes.time}>{props.time}</div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Vanya',\r\n    message: 'Hello, how are you?',\r\n    time: '22:00',\r\n}\r\nconst messageNew = {\r\n    avatar: 'https://www.pngkit.com/png/detail/115-1150342_user-avatar-icon-iconos-de-mujeres-a-color.png',\r\n    name: 'Olga',\r\n    message: 'thx, fine',\r\n    time: '22:05',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n            <Message\r\n                avatar={messageNew.avatar}\r\n                name={messageNew.name}\r\n                message={messageNew.message}\r\n                time={messageNew.time}\r\n            />\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from \"react\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport classes from \"./Affairs.module.css\";\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (id:number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};\r\n\r\n    const color = classes.name + ' ' +  classes[props.affair.priority]\r\n    // в переменной колор установленно два класса, во втором класс выбирается в зависимости от пропс (лоу, мидл, хай)\r\n\r\n    return (\r\n        <div className={classes.task}>\r\n\r\n            <span className={classes.name}>{props.affair.name}</span>\r\n            <span className={color}>{props.affair.priority}</span>\r\n            <button className={classes.deleteButton} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n\r\n\r\n\r\n/*\r\nclassName={classes.deleteButton + ' ' + classes.name} */\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport classes from \"./Affairs.module.css\";\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter:FilterType) => void\r\n    deleteAffairCallback: (id:number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')}; // need to fix\r\n    const setHigh = () => {props.setFilter('high')};\r\n    const setMiddle = () => {props.setFilter('middle')};\r\n    const setLow = () => {props.setFilter('low')};\r\n\r\n    return (\r\n        <div className={classes.allContent}>\r\n\r\n           <div className={classes.affairs}>  {mappedAffairs} </div>\r\n\r\n            <div className={classes.selectButtons}>\r\n                <button className={classes.button} onClick={setAll}>All</button>\r\n                <button className={classes.button} onClick={setHigh}>High</button>\r\n                <button className={classes.button} onClick={setMiddle}>Middle</button>\r\n                <button className={classes.button} onClick={setLow}>Low</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\nimport classes from \"./Affairs.module.css\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"low\" |\"middle\" |\"high\" ;\r\nexport type AffairType  = {\r\n    name: string\r\n    _id: number\r\n    priority: AffairPriorityType\r\n};\r\n\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\n const defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// const sum = (a: number, b: number): string => {\r\n//     return String(a+ b)\r\n// }\r\n\r\nexport const filterAffairs = (affairs:  Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === \"all\") return affairs;\r\n    else if(filter === 'low') return affairs.filter(affair => affair.priority === 'low');\r\n    else if(filter === 'middle') return affairs.filter(affair => affair.priority === 'middle');\r\n    else if(filter === 'high') return affairs.filter(affair => affair.priority === 'high')\r\n    else return affairs\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return (\r\n        affairs.filter(aff => aff._id !== _id)\r\n    );\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n\r\n    return (\r\n        <div >\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter = {filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent,KeyboardEvent, useState} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback:(event: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: boolean\r\n    totalUsers: number\r\n    onKeyPressAndTask:(e: KeyboardEvent<HTMLInputElement>) => void\r\n\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers,onKeyPressAndTask} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ?  s.error + ' ' + s.input : s.input;\r\n\r\n    return (\r\n        <div className={s.greeting}>\r\n            <div><input\r\n                value={name}\r\n                onChange={setNameCallback}\r\n                className={inputClass}\r\n                onKeyPress={onKeyPressAndTask}/>\r\n                <div className={s.errorMessage}> {error && <div>Name is required!</div>}</div>\r\n            </div>\r\n            <div className={s.buttonContainer}>\r\n                <button onClick={addUser} className={s.addButton}>add</button>\r\n                <span className={s.count}>{totalUsers}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent,KeyboardEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[]\r\n    addUserCallback: (name:string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [error, setError] = useState<boolean>(false);\r\n\r\n    const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setName(event.currentTarget.value);\r\n    };\r\n    const addUser = () => {\r\n        const trimmedTitle = name.trim()\r\n        if (trimmedTitle !== '') {\r\n            alert(`Hello ${trimmedTitle} !`);\r\n            addUserCallback(name)\r\n        }else {\r\n            setError(true)\r\n        }\r\n        setName('')\r\n    };\r\n    const onKeyPressAndAdd = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError(false)\r\n        if (e.key === 'Enter') {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length;\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressAndTask={onKeyPressAndAdd}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport { v1 } from \"uuid\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]);\r\n\r\n    const addUserCallback = (name: string) => {\r\n        const newUser: UserType = {\r\n            _id: v1(),\r\n            name: name,\r\n        }\r\n        setUsers([newUser,...users]);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n    //т.е мы пишем,какие пропсы будем использовать, а остальные отправляем в рестПропс\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName =  error ? `${s.errorInput}  ${s.superInput} ${className ? className : ''}` : `${s.superInput} ${className ? className : ''}`\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red + ' ' + s.default : s.default} ${className} ${s.button}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n            setText('')\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue}\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            {/*<Switch>*/}\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            {/*</Switch>*/}\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Routes/>\n\n            {/*</HashRouter>*/}\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}